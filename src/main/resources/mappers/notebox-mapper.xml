<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="NoteBoxMapper">
	<resultMap type="NoteBox" id="noteBoxResultMap">
		<id property="noteNo" column="NOTE_NO"/>
		<result property="recipientId" column="RECIPIENT_ID"/>
		<result property="senderId" column="SENDER_ID"/>
		<result property="senderTime" column="SENDER_TIME"/>
		<result property="noteContents" column="NOTE_CONTENTS"/>
		<result property="noteAccept" column="NOTE_ACCEPT"/>
		<result property="noteStatus" column="NOTE_STATUS"/>
		<result property="recipientNick" column="RECIPIENT_NICK"/>
		<result property="senderNick" column="SENDER_NICK"/>
		<result property="noteCheck" column="NOTE_CHECK"/>
		<result property="senderDate" column="SENDER_DATE"/>
	</resultMap>
	<resultMap type="Member" id="memberResultMap">
		<id property="memberId" column="MEMBER_ID"/>
		<result property="memberNick" 		column="MEMBER_NICK"/>
		<result property="memberName" 		column="MEMBER_NAME"/>
		<result property="memberCareer" 	column="MEMBER_CAREER"/>
  		<result property="memberSBD" 		column="MEMBER_SBD"/>
  		<result property="mProfileName" 	column="M_PROFILE_NAME"/>
  		<result property="mProfileRename" 	column="M_PROFILE_RENAME"/>
  		<result property="mProfilePath" 	column="M_PROFILE_PATH"/>
  		<result property="memberGender"		column="MEMBER_GENDER"/>
  		<result property="memberJym"		column="MEMBER_JYM"/>
  		<result property="memberManner"		column="MEMBER_MANNER"/>
  		<result property="memberIntroduce"	column="MEMBER_INTRODUCE"/>
	</resultMap>
	<resultMap type="NoteChat" id="noteChatResultMap">
		<id property="chatNo" column="CHAT_NO"/>
		<result property="senderId" column="SENDER_ID"/>
		<result property="senderNick" column="SENDER_NICK"/>
		<result property="chatContents" column="CHAT_CONTENTS"/>
		<result property="senderDate" column="SENDER_DATE"/>
	</resultMap>
	<!-- 쪽지 조회 -->
	<select id="selectAllNoteBox" resultMap="noteBoxResultMap, noteChatResultMap">
		SELECT * FROM
		(SELECT * FROM
		(SELECT NB.NOTE_NO
		    , NB.RECIPIENT_ID
		    , NB.RECIPIENT_NICK
		    , NB.SENDER_TIME AS SENDER_DATE
		    , NB.NOTE_CHECK
		    , NB.NOTE_ACCEPT
		    , NB.NOTE_STATUS
		    , NB.SENDER_ID 
		    , NB.SENDER_NICK 
		    , NC.CHAT_CONTENTS AS NOTE_CONTENTS
		    , NC.SENDER_DATE AS SENDER_TIME
		    , ROW_NUMBER()OVER(PARTITION BY NOTE_NO ORDER BY SENDER_DATE DESC) AS RN
		    FROM NOTEBOX_TBL NB FULL JOIN NOTECHAT_TBL NC ON NB.NOTE_NO = NC.CHAT_NO
		    WHERE NB.SENDER_ID = #{memberId} AND NOTE_ACCEPT = 'Y')
		WHERE RN = 1
		UNION
		SELECT * FROM
		(SELECT NB.NOTE_NO
		    , NB.RECIPIENT_ID
		    , NB.RECIPIENT_NICK
		    , NB.SENDER_TIME AS SENDER_DATE
		    , NB.NOTE_CHECK
		    , NB.NOTE_ACCEPT
		    , NB.NOTE_STATUS
		    , NB.SENDER_ID 
		    , NB.SENDER_NICK 
		    , NC.CHAT_CONTENTS AS NOTE_CONTENTS
		    , NC.SENDER_DATE AS SENDER_TIME
		    , ROW_NUMBER()OVER(PARTITION BY NOTE_NO ORDER BY SENDER_DATE DESC) AS RN
		    FROM NOTEBOX_TBL NB FULL JOIN NOTECHAT_TBL NC ON NB.NOTE_NO = NC.CHAT_NO
		    WHERE NB.RECIPIENT_ID = #{memberId})
		WHERE RN = 1) ORDER BY NOTE_NO DESC
  	</select>
  	<!-- 전체 쪽지 수 -->
	<select id="selectTotalCount" resultType="_int">
  		SELECT COUNT(*) FROM 
			(SELECT * FROM
			(SELECT NB.NOTE_NO
			    , NB.RECIPIENT_ID
			    , NB.RECIPIENT_NICK
			    , NB.SENDER_TIME AS SENDER_DATE
			    , NB.NOTE_CHECK
			    , NB.NOTE_STATUS
			    , NB.SENDER_ID 
			    , NB.SENDER_NICK 
			    , NC.CHAT_CONTENTS AS NOTE_CONTENTS
			    , NC.SENDER_DATE AS SENDER_TIME
			    , ROW_NUMBER()OVER(PARTITION BY NOTE_NO ORDER BY SENDER_DATE DESC) AS RN
			    FROM NOTEBOX_TBL NB FULL JOIN NOTECHAT_TBL NC ON NB.NOTE_NO = NC.CHAT_NO
			    WHERE NB.SENDER_ID = #{memberId} AND NOTE_ACCEPT = 'Y')
			WHERE RN = 1
			UNION
			SELECT * FROM
			(SELECT NB.NOTE_NO
			    , NB.RECIPIENT_ID
			    , NB.RECIPIENT_NICK
			    , NB.SENDER_TIME AS SENDER_DATE
			    , NB.NOTE_CHECK
			    , NB.NOTE_STATUS
			    , NB.SENDER_ID 
			    , NB.SENDER_NICK 
			    , NC.CHAT_CONTENTS AS NOTE_CONTENTS
			    , NC.SENDER_DATE AS SENDER_TIME
			    , ROW_NUMBER()OVER(PARTITION BY NOTE_NO ORDER BY SENDER_DATE DESC) AS RN
			    FROM NOTEBOX_TBL NB FULL JOIN NOTECHAT_TBL NC ON NB.NOTE_NO = NC.CHAT_NO
			    WHERE NB.RECIPIENT_ID = #{memberId})
			WHERE RN = 1)
  		<where>
			<if test="searchCondition.toString() == 'contents'">
  				NOTE_CONTENTS LIKE '%'||#{searchValue}||'%'
  			</if>
  			<if test="searchCondition.toString() == 'nickName'">
  				SENDER_NICK LIKE '%'||#{searchValue}||'%'
  			</if>
  			<if test="searchCondition.toString() == 'all'">
	  			NOTE_CONTENTS LIKE '%'||#{searchValue}||'%'
	  			OR SENDER_NICK LIKE '%'||#{searchValue}||'%'
  			</if>
			AND NOTE_STATUS = 'Y'
		</where>
  	</select>
  	<select id="countNoteBoxList" resultType="map">
  		SELECT CHAT_NO, COUNT(*) AS COUNT FROM NOTECHAT_TBL WHERE CHAT_NO IN
		(SELECT NOTE_NO FROM NOTEBOX_TBL WHERE SENDER_ID = #{memberId} OR RECIPIENT_ID = #{memberId})
		AND NOT SENDER_ID = #{memberId} AND CHAT_STATUS = 'N' GROUP BY CHAT_NO
  	</select>
  	<select id="selectOneByNo" resultMap="noteBoxResultMap, memberResultMap">
  		SELECT NOTE_NO, RECIPIENT_ID, SENDER_ID, SENDER_TIME, NOTE_CONTENTS, NOTE_ACCEPT, NOTE_STATUS, (SELECT MEMBER_NICK FROM MEMBER_TBL WHERE MEMBER_ID = #{recipientId}) AS RECIPIENT_NICK, (SELECT MEMBER_NICK FROM MEMBER_TBL WHERE MEMBER_ID = #{senderId}) AS SENDER_NICK FROM NOTEBOX_TBL 
  		WHERE NOTE_NO = #{noteNo}
  	</select>
	<update id="updateNoteBox">
		UPDATE NOTEBOX_TBL SET NOTE_ACCEPT = 'Y' WHERE NOTE_NO = #{noteNo}
	</update>
	<select id="selectCountNoteBox" resultType="_int">
		SELECT COUNT(*) FROM NOTEBOX_TBL
		WHERE NOTE_CHECK = 'N' AND RECIPIENT_ID = #{memberId}
	</select>
	<select id="getCountNoteChat" resultType="_int">
		SELECT COUNT(*) FROM NOTECHAT_TBL
		WHERE CHAT_NO IN (SELECT NOTE_NO FROM NOTEBOX_TBL WHERE SENDER_ID = #{memberId} OR RECIPIENT_ID = #{memberId})
		AND NOT SENDER_ID = #{memberId} AND CHAT_STATUS = 'N'
	</select>
	<!-- 조건별 검색 -->
	<select id="selectAllByValue" resultMap="noteBoxResultMap">
  		SELECT * FROM
		(SELECT * FROM
		(SELECT NB.NOTE_NO
		    , NB.RECIPIENT_ID
		    , NB.RECIPIENT_NICK
		    , NB.SENDER_TIME AS SENDER_DATE
		    , NB.NOTE_CHECK
		    , NB.NOTE_ACCEPT
		    , NB.NOTE_STATUS
		    , NB.SENDER_ID 
		    , NB.SENDER_NICK 
		    , NC.CHAT_CONTENTS AS NOTE_CONTENTS
		    , NC.SENDER_DATE AS SENDER_TIME
		    , ROW_NUMBER()OVER(PARTITION BY NOTE_NO ORDER BY SENDER_DATE DESC) AS RN
		    FROM NOTEBOX_TBL NB FULL JOIN NOTECHAT_TBL NC ON NB.NOTE_NO = NC.CHAT_NO
		    WHERE NB.SENDER_ID = #{memberId} AND NOTE_ACCEPT = 'Y')
		WHERE RN = 1
		UNION
		SELECT * FROM
		(SELECT NB.NOTE_NO
		    , NB.RECIPIENT_ID
		    , NB.RECIPIENT_NICK
		    , NB.SENDER_TIME AS SENDER_DATE
		    , NB.NOTE_CHECK
		    , NB.NOTE_ACCEPT
		    , NB.NOTE_STATUS
		    , NB.SENDER_ID 
		    , NB.SENDER_NICK 
		    , NC.CHAT_CONTENTS AS NOTE_CONTENTS
		    , NC.SENDER_DATE AS SENDER_TIME
		    , ROW_NUMBER()OVER(PARTITION BY NOTE_NO ORDER BY SENDER_DATE DESC) AS RN
		    FROM NOTEBOX_TBL NB FULL JOIN NOTECHAT_TBL NC ON NB.NOTE_NO = NC.CHAT_NO
		    WHERE NB.RECIPIENT_ID = #{memberId})
		WHERE RN = 1) ORDER BY NOTE_NO DESC;
  		<where>
  			<if test="searchCondition.toString() == 'contents'">
  				NOTE_CONTENTS LIKE '%'||#{searchValue}||'%'
  			</if>
  			<if test="searchCondition.toString() == 'nickName'">
  				SENDER_NICK LIKE '%'||#{searchValue}||'%'
  			</if>
  			<if test="searchCondition.toString() == 'all'">
	  			NOTE_CONTENTS LIKE '%'||#{searchValue}||'%'
	  			OR SENDER_NICK LIKE '%'||#{searchValue}||'%'
  			</if>
  		 	AND NOTE_STATUS = 'Y'
  		</where>
  	</select>
  	<!-- 채팅 읽음 -->
  	<update id="checkChat">
		UPDATE ( 
		SELECT * FROM NOTECHAT_TBL WHERE CHAT_NO IN
		(SELECT NOTE_NO FROM NOTEBOX_TBL WHERE SENDER_ID = #{memberId} OR RECIPIENT_ID = #{memberId})
		AND NOT SENDER_ID = #{memberId} AND CHAT_STATUS = 'N' AND CHAT_NO = #{noteNo})
		SET CHAT_STATUS = 'Y' 		
  	</update>
  	<!-- 쪽지(매칭) 읽음 -->
	<update id="updateCheckNote">
		UPDATE NOTEBOX_TBL SET NOTE_CHECK = 'Y'
		WHERE NOTE_NO = #{noteNo} AND RECIPIENT_ID = #{recipientId}
	</update>
	<!-- 쪽지 삭제 -->
	<delete id="deleteNote">
		DELETE FROM NOTEBOX_TBL
		WHERE NOTE_NO = #{noteNo}
	</delete>
	<select id="selectOneByName" resultMap="memberResultMap">
		SELECT * FROM MEMBER_TBL
		WHERE MEMBER_NICK = #{senderNick}
	</select>
</mapper>